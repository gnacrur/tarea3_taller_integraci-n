{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["socket","useStyles","makeStyles","theme","margin","spacing","root","flexGrow","backgroundColor","palette","background","paper","heading","fontSize","typography","pxToRem","fontWeight","fontWeightBold","secondaryHeading","fontWeightRegular","marginLeft","padding","textAlign","color","text","secondary","justifyContent","alignItems","a11yProps","index","id","TabPanel","props","children","value","other","role","hidden","aria-labelledby","Box","p","Typography","getTiempo","stamp","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","App","useState","stocks","setStocks","stocksVolBuy","setStocksVolBuy","stocksVolSell","setStocksVolSell","stocksRaw","setStocksRaw","conectado","setConectado","exchanges","setExchanges","stockdata","setStockData","classes","React","setValue","value2","setValue2","useEffect","on","stock_info","prev","emit","stocks_data","i","estaba","ticker","lista_stocks","values_sin_tiempo","values","time","bajo","Math","min","alto","max","cambio","toFixed","stock_extendido","buy","sell","volumen","volume","company","origen","moneda","push","Object","keys","length","exchanges_data","volumen_total","exchange","numero_acciones","listed_companies","empresa","stock","exchange2","participacion","io","path","className","AppBar","position","Tabs","onChange","event","newValue","aria-label","style","flex","Tab","label","Button","variant","top","right","alignRight","onClick","disconnect","connect","Grid","container","item","xs","FormControl","component","marginTop","FormLabel","RadioGroup","name","e","parseInt","target","map","FormControlLabel","control","Radio","width","height","chartType","loader","data","options","title","hAxis","vAxis","rootProps","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","exchange_ticker","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ac5d6f9f.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport io from 'socket.io-client';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Chart from \"react-google-charts\";\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginLeft: 5\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  \r\n}));\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getTiempo(stamp){\r\n  var date = new Date(stamp);\r\n  var hours = date.getHours();\r\n  var minutes = \"0\" + date.getMinutes();\r\n  var seconds = \"0\" + date.getSeconds();\r\n  var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n  return formattedTime\r\n\r\n}\r\n\r\nlet socket; \r\n\r\nfunction App() {\r\n\r\n  const [stocks, setStocks] = useState([])\r\n  const [stocksVolBuy, setStocksVolBuy] = useState([])\r\n  const [stocksVolSell, setStocksVolSell] = useState([])\r\n  const [stocksRaw, setStocksRaw] = useState([])\r\n  const [conectado, setConectado] = useState(true)\r\n  const [exchanges, setExchanges] = useState([])\r\n  const [stockdata, setStockData] = useState([])\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [value2, setValue2] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n  \r\n\r\n  useEffect(function effectFunction() {     \r\n    socket.on('UPDATE', (stock_info) => {setStocksRaw(prev =>[ stock_info, ...prev ])});\r\n    socket.on('BUY', (stock_info) => {setStocksVolBuy(prev =>[ stock_info, ...prev ])}); \r\n    socket.on('SELL', (stock_info) => {setStocksVolSell(prev =>[ stock_info, ...prev ])});\r\n    socket.emit('EXCHANGES');\r\n    socket.on('EXCHANGES', (exchanges) => {setExchanges(exchanges)});\r\n    socket.emit('STOCKS');\r\n    socket.on('STOCKS', (stocks_data) => {setStockData(stocks_data)});\r\n}, [])\r\n\r\nuseEffect(function effectFunction() {\r\n  if (typeof stocksRaw[0] !== \"undefined\" ){ \r\n    let i = 0;\r\n    let estaba = false;\r\n    for (const stock of stocks){\r\n      if (stock.ticker === stocksRaw[0].ticker){\r\n        const lista_stocks = [...stocks];\r\n        lista_stocks[i].value = stocksRaw[0].value\r\n        lista_stocks[i].values_sin_tiempo = [...lista_stocks[i].values_sin_tiempo,  stocksRaw[0].value]\r\n        lista_stocks[i].values = [...lista_stocks[i].values, [getTiempo(stocksRaw[0].time) , stocksRaw[0].value]]\r\n        lista_stocks[i].bajo =  Math.min(...lista_stocks[i].values_sin_tiempo);\r\n        lista_stocks[i].alto =  Math.max(...lista_stocks[i].values_sin_tiempo);\r\n        lista_stocks[i].cambio = (100*(lista_stocks[i].values_sin_tiempo[1]-lista_stocks[i].values_sin_tiempo[0])/lista_stocks[i].values_sin_tiempo[1]).toFixed(2) \r\n        setStocks([...lista_stocks])\r\n        estaba = true;\r\n      }\r\n      i++;\r\n    }\r\n    if (!estaba){\r\n      const stock_extendido = {\r\n        ...stocksRaw[0], \r\n        bajo: stocksRaw[0].value, \r\n        alto: stocksRaw[0].value,\r\n        cambio: 0,\r\n        values:[[getTiempo(stocksRaw[0].time),stocksRaw[0].value]],\r\n        values_sin_tiempo:[],\r\n        buy: 0,\r\n        sell: 0,\r\n        volumen: 0 }\r\n      \r\n      setStocks(prev =>[...prev, stock_extendido ])\r\n    }\r\n\r\n  }}, [stocksRaw])\r\n\r\nuseEffect(function effectFunction() {\r\n  if (typeof stocksVolBuy[0] !== \"undefined\" ){\r\n    let i = 0;\r\n    for (const stock of stocks){\r\n      if (stock.ticker === stocksVolBuy[0].ticker){\r\n        const lista_stocks = [...stocks];\r\n        if (typeof lista_stocks[i].buy !== \"undefined\" ){ \r\n          lista_stocks[i].buy = stocksVolBuy[0].volume\r\n          lista_stocks[i].volumen = lista_stocks[i].buy + lista_stocks[i].sell\r\n          setStocks([...lista_stocks])}\r\n      }\r\n      i++;\r\n    }  \r\n  }}, [stocksVolBuy])\r\n\r\nuseEffect(function effectFunction() {\r\n  if (typeof stocksVolSell[0] !== \"undefined\" ){ \r\n    let i = 0;\r\n    for (const stock of stocks){\r\n      if (stock.ticker === stocksVolSell[0].ticker){\r\n        const lista_stocks = [...stocks];\r\n        if (typeof lista_stocks[i].sell !== \"undefined\" ){ \r\n          lista_stocks[i].sell = stocksVolSell[0].volume\r\n          lista_stocks[i].volumen = lista_stocks[i].buy + lista_stocks[i].sell\r\n          setStocks([...lista_stocks])}\r\n      }\r\n      i++;\r\n    }  \r\n  }}, [stocksVolSell])\r\n\r\nuseEffect(function effectFunction() { \r\n  const lista_stocks = [...stocks];        \r\n  for (const stock_info of stockdata){        \r\n      let i = 0;\r\n      let estaba = false;\r\n      for (const stock of stocks){\r\n        if (stock.ticker === stock_info[\"ticker\"]){  \r\n          estaba = true                              \r\n          lista_stocks[i] = {\r\n            ...lista_stocks[i], \r\n            company: stock_info[\"company_name\"],\r\n            origen: stock_info[\"country\"], \r\n            moneda: stock_info[\"quote_base\"]}               \r\n        }\r\n        i++;\r\n      }\r\n      if (!estaba){\r\n        const stock_extendido = {\r\n          company:  stock_info[\"company_name\"],\r\n          ticker: stock_info[\"ticker\"],\r\n          values: [],\r\n          values_sin_tiempo: [],\r\n          buy: 0,\r\n          sell: 0,\r\n          origen: stock_info[\"country\"], \r\n          moneda: stock_info[\"quote_base\"]}\r\n        lista_stocks.push(stock_extendido);\r\n      }\r\n    }\r\n    setStocks([...lista_stocks])\r\n    }\r\n    , [stockdata])\r\n\r\nuseEffect(function effectFunction() {  \r\n  if(Object.keys(exchanges).length !== 0){ \r\n    let exchanges_data = {...exchanges};\r\n    let volumen_total = 0;     \r\n    for (let exchange of Object.keys(exchanges_data)){ \r\n      exchanges_data[exchange].numero_acciones = exchanges_data[exchange].listed_companies.length\r\n      let buy = 0;\r\n      let sell = 0;\r\n      let volumen = 0;\r\n      for (const empresa of exchanges_data[exchange].listed_companies){\r\n        for (const stock of stocks){\r\n          if (stock.company === empresa){\r\n            buy += stock.buy\r\n            sell += stock.sell\r\n            volumen += stock.volumen\r\n          }\r\n        }\r\n      }\r\n      exchanges_data[exchange].buy = buy\r\n      exchanges_data[exchange].sell = sell\r\n      exchanges_data[exchange].volumen = volumen\r\n    }for (let exchange1 of Object.keys(exchanges_data)){ \r\n      volumen_total += exchanges_data[exchange1].volumen}\r\n    for (let exchange2 of Object.keys(exchanges_data)){ \r\n      exchanges_data[exchange2].participacion = (100*(exchanges_data[exchange2].volumen/volumen_total)).toFixed(2)  }\r\n    setExchanges(exchanges_data);    \r\n    }\r\n  }, [stocks])\r\n\r\n    \r\n\r\n  if (!socket){\r\n    socket = io('wss://le-18262636.bitzonte.com', {\r\n      path: '/stocks'\r\n    });\r\n    }\r\n  \r\nconst handleConnect = () => {\r\n  setConectado(conectado? false: true)\r\n  if (conectado){ socket.disconnect()}\r\n  else{socket.connect();\r\n    socket.emit('EXCHANGES');\r\n    socket.emit('STOCKS');} ;\r\n  \r\n}    \r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className={classes.root} >\r\n      <AppBar position=\"static\">\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" style={{flex:1}}>\r\n          <Tab label=\"Stocks\" {...a11yProps(0)} />\r\n          <Tab label=\"Exchanges\" {...a11yProps(1)} />\r\n          <Button variant=\"contained\"  style={{position:'absolute',top: 5, right: 40, alignRight:'flex-end'}} onClick={() => handleConnect()}>{conectado? \"Desconectarse\": \"Conectarse\"}</Button>\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>               \r\n        <Grid className={classes.root} container spacing={2}>\r\n          <Grid container item xs>\r\n            \r\n              <FormControl component=\"fieldset\" style={{marginLeft:'20px', marginTop:'15px'}}>\r\n                <FormLabel component=\"legend\">Datos del Gráfico</FormLabel>\r\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value2} onChange={(e) => setValue2(parseInt(e.target.value))}>\r\n                {stocks.map((stock, i) => <FormControlLabel value={i} control={<Radio />} label={stock.ticker} />)}\r\n                </RadioGroup>\r\n              </FormControl>\r\n            \r\n          </Grid>\r\n          <Grid item xs >\r\n            {stocks.map((stock, i) => {\r\n              if (parseInt(i) === value2)\r\n              return <Chart\r\n                      width={'1000px'}\r\n                      height={'400px'}\r\n                      chartType=\"LineChart\"\r\n                      loader={<div>Loading Chart</div>}\r\n                      data={[\r\n                        ['x', stock.ticker],\r\n                        ...stock.values\r\n                        \r\n                      ]}\r\n                      options={{\r\n                        title: 'Precio de la acción vs Tiempo',\r\n                        hAxis: {\r\n                          title: 'Tiempo',\r\n                        },\r\n                        vAxis: {\r\n                          title: stock.moneda,\r\n                        },\r\n                      }}\r\n                      rootProps={{ 'data-testid': '1' }}\r\n                    />})}\r\n          </Grid>\r\n          <Grid item xs={12} >\r\n              {stocks.map(stock => \r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={stock.company}\r\n                id={stock.company}\r\n              >\r\n                <Typography className={classes.heading}>{stock.company} ({stock.ticker})</Typography>\r\n            <Typography className={classes.secondaryHeading}>$ {stock.value} {stock.moneda}</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                Bajo: $ {stock.bajo} {stock.moneda} | Alto: ${stock.alto} {stock.moneda} | Cambio Porcentual: {stock.cambio}% | Volumen: {stock.volumen} | Pais de Origen: {stock.origen} \r\n                </Typography>            \r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            )}\r\n         </Grid>\r\n        </Grid>\r\n         \r\n        \r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>      \r\n       {Object.values(exchanges).map(exchange => \r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls={exchange.name}\r\n                id={exchange.ticker}>\r\n                <Typography className={classes.heading}>{exchange.name} ({exchange.exchange_ticker})</Typography>\r\n                <Typography className={classes.secondaryHeading}> Participación Mercado: {exchange.participacion} %</Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <Typography>\r\n                Buy: {exchange.buy} | Sell: {exchange.sell} | Volumen: {exchange.volumen} | Cantidad acciones: {exchange.numero_acciones} ({exchange.listed_companies})\r\n                </Typography>            \r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>)}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}